<?php

namespace App\Command;

use Symfony\Component\Console\Attribute\AsCommand;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Style\SymfonyStyle;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Doctrine\ORM\EntityManager;
use App\Entity\Film;
use App\Repository\FilmRepository;
use Doctrine\Persistence\ManagerRegistry;

#[AsCommand(
    name: 'app:add-film',
    description: 'Add a film',
)]
class AddFilmCommand extends Command
{
    private ?FilmRepository $filmRepository;
    
    public function __construct(ManagerRegistry $doctrineManager)
    {
        $this->filmRepository = $doctrineManager->getRepository(Film::class);
        
        parent::__construct();
    }

    protected function configure(): void
    {
        $this
        ->addArgument('title', InputArgument::REQUIRED, 'Title of the film (spaces must be quoted)')
        ->addArgument('year', InputArgument::REQUIRED, 'Year of the film');
        ;
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $io = new SymfonyStyle($input, $output);
        $title = $input->getArgument('title');
        $year = $input->getArgument('year');   
        
        // crée une instance en mémoire
        $film = new Film();
        $film->setTitle($title);
        $film->setYear($year);
        
        // sauve l'instance dans la base de données
        $this->filmRepository->save($film, true);
        
        // si tout va bien, on récupère un identifiant
        if($film->getId()) {
            $io->text('Created: '. $film);
            //$filmRepository->save($film, true);
            return Command::SUCCESS;
        }
        else {
            $io->error('could not create film!');
            return Command::FAILURE;
        }
    }
}
