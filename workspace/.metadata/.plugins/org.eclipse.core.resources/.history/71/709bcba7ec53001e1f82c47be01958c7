<?php

namespace App\Command;

use Symfony\Component\Console\Attribute\AsCommand;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Style\SymfonyStyle;

#[AsCommand(
    name: 'app:show-film',
    description: 'Show recommendations for a film',
)]
class ShowFilmCommand extends Command
{
    public function __construct()
    {
        parent::__construct();
    }

    protected function configure(): void
    {
        $this
        ->addArgument('title', InputArgument::REQUIRED, 'Title of the film (spaces must be quoted)')
        ->addArgument('year', InputArgument::REQUIRED, 'Year of the film');
        ;
    }

    protected function execute(InputInterface $input, OutputInterface $output): int
    {
        $io = new SymfonyStyle($input, $output);
        $title = $input->getArgument('title');
        $year = $input->getArgument('year');
        
        if ($year && ! preg_match('/^\d+$/', $year)) {
            $io->error('second argument must be integer');
            return Command::FAILURE;
        }
        $film = $this->filmRepository->findOneBy([
            'year' => $year,
            'title' => $title]);
        if(!$film) {
            $io->error('unknown film: ' . $title . ' (' . $year .')');
            return Command::FAILURE;
        }
        $io->title($film . ':');
        
        $io->listing($film->getRecommendations()->getValues());
        
        return Command::SUCCESS;
    }
}
